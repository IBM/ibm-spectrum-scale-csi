---
- name: Set secret values
  set_fact:
    secret_name_dummy: "afakesecret"
    secret_pass: "cGFzc3dvcmQ=" # "password"
    secret_user: "dXNlcm5hbWU=" # "username"
    secret_user_delta: "dXNlcm5hbWu=" # "usernamk"
    secret_name: "secret1"

- name: Ensure environment is ready
  block:
    - name: Clear the secret if present
      k8s:
        state: absent
        namespace: "{{ namespace }}"
        definition:
          apiVersion: "v1"
          kind: "Secret"
          metadata:
            name: "{{ secret_name }}"

- name: Assert Custom Resource has been created
  k8s_info:
    kind: "{{ custom_resource.kind }}"
    name: "{{custom_resource.metadata.name}}"
    namespace: "{{ custom_resource.metadata.namespace }}"
  register: cr

# Should this be computed?
- name: Set start_counter
  set_fact:
    start_counter:
      "{{cr.resources[0].spec.trigger | default(0) | int }}"
      #"{{ cr.resources[0].secretCounter }}"

- debug:
    var: cr

# The password and username secrets are literally just "username" and "password".
- name: "Secret[1]: Ensure secret create triggers operator"
  block:
    - name: Create the password secret
      k8s:
        state: present
        definition:
          apiVersion: "v1"
          kind: "Secret"
          metadata:
            name: "{{ secret_name }}"
            namespace: "{{ namespace }}"
            labels:
              app.kubernetes.io/name: ibm-spectrum-scale-csi-operator
          data:
            password: "{{ secret_pass }}"
            username: "{{ secret_user }}"
          type: "Opaque"

    # How can I improve this?
    - name: Wait 60s for secret to be processed
      k8s_info:
        api_version: "{{ custom_resource.apiVersion }}"
        kind: "{{ custom_resource.kind }}"
      register: cr_secret
      until:
        - start_counter|int != ( cr_secret.resources[0].spec.trigger | default(start_counter)  | int )
      delay: 6
      retries: 10

    - name: Update start_counter
      set_fact:
        start_counter: "{{cr_secret.resources[0].spec.trigger | int}}"

  rescue:
    - fail:
        msg: "Secret[1]: Secret create failed to trigger operator"

- name: "Secret[2]: Ensure secret create doesn't triggers operator when label not set"
  block:
    - name: Create the password secret, not linked to operator
      k8s:
        state: present
        definition:
          apiVersion: "v1"
          kind: "Secret"
          metadata:
            name: "{{secret_name_dummy}}"
            namespace: "{{ namespace }}"
          data:
            password: "{{ secret_pass }}"
            username: "{{ secret_user }}"
          type: "Opaque"

    - name: Wait 30s for secret to be processed
      pause:
        seconds: 30

    # How can I improve this?
    - name: Verify operator didn't process secret
      k8s_info:
        api_version: "{{ custom_resource.apiVersion }}"
        kind: "{{ custom_resource.kind }}"
      register: cr_secret

    - fail:
        msg: "Secret[2]: Secret create triggered operator"
      when: start_counter|int !=  (cr_secret.resources[0].spec.trigger | int)

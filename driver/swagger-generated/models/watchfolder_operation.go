// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WatchfolderOperation watchfolder operation
//
// swagger:model WatchfolderOperation
type WatchfolderOperation struct {

	// The action that shall be applied [enable, disable]
	Action string `json:"action,omitempty"`

	// The watch id to be disabled (or 'all')
	WatchID string `json:"watchId,omitempty"`

	// The arguments used for the enable action
	WatchfolderConfig *WatchfolderEnable `json:"watchfolderConfig,omitempty"`
}

// Validate validates this watchfolder operation
func (m *WatchfolderOperation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWatchfolderConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WatchfolderOperation) validateWatchfolderConfig(formats strfmt.Registry) error {

	if swag.IsZero(m.WatchfolderConfig) { // not required
		return nil
	}

	if m.WatchfolderConfig != nil {
		if err := m.WatchfolderConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("watchfolderConfig")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WatchfolderOperation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WatchfolderOperation) UnmarshalBinary(b []byte) error {
	var res WatchfolderOperation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

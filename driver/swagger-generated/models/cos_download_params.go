// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CosDownloadParams Object with parameters for COS download
//
// swagger:model CosDownloadParams
type CosDownloadParams struct {

	// Download all files from COS
	All bool `json:"all,omitempty"`

	// Group id for fileset owner
	Gid string `json:"gid,omitempty"`

	// Download specified files only from COS
	ObjectList []string `json:"objectList"`

	// Path to a dedicated directory in a fileset. You can skip this parameter to use default link path of your fileset
	Path string `json:"path,omitempty"`

	// Access permission in octal
	Permission string `json:"permission,omitempty"`

	// Prefix of object names to download
	Prefix string `json:"prefix,omitempty"`

	// User id for fileset owner
	UID string `json:"uid,omitempty"`

	// Download data
	UseData bool `json:"useData,omitempty"`

	// Download metadata only
	UseMetadata bool `json:"useMetadata,omitempty"`

	// Don't create sub-directory if '/' in object name
	UseNoSubdir bool `json:"useNoSubdir,omitempty"`
}

// Validate validates this cos download params
func (m *CosDownloadParams) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CosDownloadParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CosDownloadParams) UnmarshalBinary(b []byte) error {
	var res CosDownloadParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

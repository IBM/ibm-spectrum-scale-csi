// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConvertToSecondary convert to secondary
//
// swagger:model ConvertToSecondary
type ConvertToSecondary struct {

	// If convertToSecondary failed or got interrupted, it will not create afmctl file at the secondary. The command should be rerun with the --force option.
	Force bool `json:"force,omitempty"`

	// Specifies the ID of the primary with which the secondary will be associated.
	// Required: true
	Primaryid *string `json:"primaryid"`
}

// Validate validates this convert to secondary
func (m *ConvertToSecondary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrimaryid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConvertToSecondary) validatePrimaryid(formats strfmt.Registry) error {

	if err := validate.Required("primaryid", "body", m.Primaryid); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConvertToSecondary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConvertToSecondary) UnmarshalBinary(b []byte) error {
	var res ConvertToSecondary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

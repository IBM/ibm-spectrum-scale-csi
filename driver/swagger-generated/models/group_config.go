// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GroupConfig group config
//
// swagger:model GroupConfig
type GroupConfig struct {

	// The call home server node
	CallHomeNode string `json:"callHomeNode,omitempty"`

	// A list of call home child nodes
	ChildNodes []string `json:"childNodes"`

	// Specifies if this group is enabled
	Enabled bool `json:"enabled,omitempty"`

	// The name of the call home group
	GroupName string `json:"groupName,omitempty"`

	// proxy
	Proxy *ProxyConfig `json:"proxy,omitempty"`
}

// Validate validates this group config
func (m *GroupConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProxy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GroupConfig) validateProxy(formats strfmt.Registry) error {

	if swag.IsZero(m.Proxy) { // not required
		return nil
	}

	if m.Proxy != nil {
		if err := m.Proxy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("proxy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GroupConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GroupConfig) UnmarshalBinary(b []byte) error {
	var res GroupConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

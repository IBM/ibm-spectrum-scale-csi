// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CopyConfig copy config
//
// swagger:model CopyConfig
type CopyConfig struct {

	// Specifies whether the underneath cp command is used with --force option
	Force bool `json:"force,omitempty"`

	// The name of the nodeclass
	NodeclassName string `json:"nodeclassName,omitempty"`

	// The name of the fileset the path belongs to.
	TargetFileset string `json:"targetFileset,omitempty"`

	// The name of the filesystem the path belongs to.
	// Required: true
	TargetFilesystem *string `json:"targetFilesystem"`

	// The directory path relative to the filesystem's mount point or to the fileset path (if specified).
	TargetPath string `json:"targetPath,omitempty"`
}

// Validate validates this copy config
func (m *CopyConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTargetFilesystem(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CopyConfig) validateTargetFilesystem(formats strfmt.Registry) error {

	if err := validate.Required("targetFilesystem", "body", m.TargetFilesystem); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CopyConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CopyConfig) UnmarshalBinary(b []byte) error {
	var res CopyConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

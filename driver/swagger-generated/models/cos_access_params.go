// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CosAccessParams Object with parameters for creating COS related directories
//
// swagger:model CosAccessParams
type CosAccessParams struct {

	// Access key for your bucket. Use together with Secret key
	AccessKey string `json:"accessKey,omitempty"`

	// Bucket name related to be used for the directory
	// Required: true
	Bucket *string `json:"bucket"`

	// Directory name or full path in a fileset to be created
	// Required: true
	Dir *string `json:"dir"`

	// URL to your object store. Use server's hostname/IP
	// Required: true
	Endpoint *string `json:"endpoint"`

	// Secret key for your bucket. Use together with Access key
	SecretKey string `json:"secretKey,omitempty"`
}

// Validate validates this cos access params
func (m *CosAccessParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBucket(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDir(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndpoint(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CosAccessParams) validateBucket(formats strfmt.Registry) error {

	if err := validate.Required("bucket", "body", m.Bucket); err != nil {
		return err
	}

	return nil
}

func (m *CosAccessParams) validateDir(formats strfmt.Registry) error {

	if err := validate.Required("dir", "body", m.Dir); err != nil {
		return err
	}

	return nil
}

func (m *CosAccessParams) validateEndpoint(formats strfmt.Registry) error {

	if err := validate.Required("endpoint", "body", m.Endpoint); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CosAccessParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CosAccessParams) UnmarshalBinary(b []byte) error {
	var res CosAccessParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

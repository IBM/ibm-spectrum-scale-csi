// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GpfsJobCommandSpec gpfs job command spec
//
// swagger:model GpfsJobCommandSpec
type GpfsJobCommandSpec struct {

	// args
	Args []string `json:"args"`

	// command alias
	CommandAlias string `json:"commandAlias,omitempty"`

	// command Id
	CommandID string `json:"commandId,omitempty"`

	// command template
	CommandTemplate string `json:"commandTemplate,omitempty"`

	// execution nodes
	ExecutionNodes []string `json:"executionNodes"`

	// exit on fail
	ExitOnFail bool `json:"exitOnFail,omitempty"`

	// job definition name
	JobDefinitionName string `json:"jobDefinitionName,omitempty"`

	// last update
	LastUpdate *FsccDate `json:"lastUpdate,omitempty"`

	// log directory
	LogDirectory string `json:"logDirectory,omitempty"`

	// log retention days
	LogRetentionDays int32 `json:"logRetentionDays,omitempty"`

	// oid
	Oid int64 `json:"oid,omitempty"`

	// queue
	Queue string `json:"queue,omitempty"`

	// step
	Step int32 `json:"step,omitempty"`

	// success codes
	SuccessCodes int32 `json:"successCodes,omitempty"`

	// unique ID
	UniqueID string `json:"uniqueID,omitempty"`
}

// Validate validates this gpfs job command spec
func (m *GpfsJobCommandSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastUpdate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GpfsJobCommandSpec) validateLastUpdate(formats strfmt.Registry) error {

	if swag.IsZero(m.LastUpdate) { // not required
		return nil
	}

	if m.LastUpdate != nil {
		if err := m.LastUpdate.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("lastUpdate")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GpfsJobCommandSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GpfsJobCommandSpec) UnmarshalBinary(b []byte) error {
	var res GpfsJobCommandSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"example.com/m/v2/models"
)

// NfsExportPathGetReader is a Reader for the NfsExportPathGet structure.
type NfsExportPathGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NfsExportPathGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNfsExportPathGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNfsExportPathGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNfsExportPathGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNfsExportPathGetOK creates a NfsExportPathGetOK with default headers values
func NewNfsExportPathGetOK() *NfsExportPathGetOK {
	return &NfsExportPathGetOK{}
}

/*NfsExportPathGetOK handles this case with default header values.

successful operation
*/
type NfsExportPathGetOK struct {
	Payload *models.NfsExportInlineResponse200
}

func (o *NfsExportPathGetOK) Error() string {
	return fmt.Sprintf("[GET /scalemgmt/v2/nfs/exports/{exportPath}][%d] nfsExportPathGetOK  %+v", 200, o.Payload)
}

func (o *NfsExportPathGetOK) GetPayload() *models.NfsExportInlineResponse200 {
	return o.Payload
}

func (o *NfsExportPathGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NfsExportInlineResponse200)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNfsExportPathGetBadRequest creates a NfsExportPathGetBadRequest with default headers values
func NewNfsExportPathGetBadRequest() *NfsExportPathGetBadRequest {
	return &NfsExportPathGetBadRequest{}
}

/*NfsExportPathGetBadRequest handles this case with default header values.

NFS export not found
*/
type NfsExportPathGetBadRequest struct {
	Payload *models.Http400BadRequest
}

func (o *NfsExportPathGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /scalemgmt/v2/nfs/exports/{exportPath}][%d] nfsExportPathGetBadRequest  %+v", 400, o.Payload)
}

func (o *NfsExportPathGetBadRequest) GetPayload() *models.Http400BadRequest {
	return o.Payload
}

func (o *NfsExportPathGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Http400BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNfsExportPathGetInternalServerError creates a NfsExportPathGetInternalServerError with default headers values
func NewNfsExportPathGetInternalServerError() *NfsExportPathGetInternalServerError {
	return &NfsExportPathGetInternalServerError{}
}

/*NfsExportPathGetInternalServerError handles this case with default header values.

Internal Server Error
*/
type NfsExportPathGetInternalServerError struct {
	Payload *models.Http500InternalServerError
}

func (o *NfsExportPathGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /scalemgmt/v2/nfs/exports/{exportPath}][%d] nfsExportPathGetInternalServerError  %+v", 500, o.Payload)
}

func (o *NfsExportPathGetInternalServerError) GetPayload() *models.Http500InternalServerError {
	return o.Payload
}

func (o *NfsExportPathGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Http500InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

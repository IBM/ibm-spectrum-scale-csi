// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewQuotasGetv20Params creates a new QuotasGetv20Params object
// with the default values initialized.
func NewQuotasGetv20Params() *QuotasGetv20Params {
	var ()
	return &QuotasGetv20Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewQuotasGetv20ParamsWithTimeout creates a new QuotasGetv20Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewQuotasGetv20ParamsWithTimeout(timeout time.Duration) *QuotasGetv20Params {
	var ()
	return &QuotasGetv20Params{

		timeout: timeout,
	}
}

// NewQuotasGetv20ParamsWithContext creates a new QuotasGetv20Params object
// with the default values initialized, and the ability to set a context for a request
func NewQuotasGetv20ParamsWithContext(ctx context.Context) *QuotasGetv20Params {
	var ()
	return &QuotasGetv20Params{

		Context: ctx,
	}
}

// NewQuotasGetv20ParamsWithHTTPClient creates a new QuotasGetv20Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewQuotasGetv20ParamsWithHTTPClient(client *http.Client) *QuotasGetv20Params {
	var ()
	return &QuotasGetv20Params{
		HTTPClient: client,
	}
}

/*QuotasGetv20Params contains all the parameters to send to the API endpoint
for the quotas getv2 0 operation typically these are written to a http.Request
*/
type QuotasGetv20Params struct {

	/*Fields
	  Comma separated list of fields to be included in response. ':all:' selects all available fields.

	*/
	Fields *string
	/*FilesetName
	  The filesetName or \_all_\_

	*/
	FilesetName string
	/*FilesystemName
	  The filesystem name, :all:, :all\_local: or :all\_remote:

	*/
	FilesystemName string
	/*Filter
	  Filter objects by expression, e.g. 'status=HEALTHY,entityType=FILESET'

	*/
	Filter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the quotas getv2 0 params
func (o *QuotasGetv20Params) WithTimeout(timeout time.Duration) *QuotasGetv20Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the quotas getv2 0 params
func (o *QuotasGetv20Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the quotas getv2 0 params
func (o *QuotasGetv20Params) WithContext(ctx context.Context) *QuotasGetv20Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the quotas getv2 0 params
func (o *QuotasGetv20Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the quotas getv2 0 params
func (o *QuotasGetv20Params) WithHTTPClient(client *http.Client) *QuotasGetv20Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the quotas getv2 0 params
func (o *QuotasGetv20Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the quotas getv2 0 params
func (o *QuotasGetv20Params) WithFields(fields *string) *QuotasGetv20Params {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the quotas getv2 0 params
func (o *QuotasGetv20Params) SetFields(fields *string) {
	o.Fields = fields
}

// WithFilesetName adds the filesetName to the quotas getv2 0 params
func (o *QuotasGetv20Params) WithFilesetName(filesetName string) *QuotasGetv20Params {
	o.SetFilesetName(filesetName)
	return o
}

// SetFilesetName adds the filesetName to the quotas getv2 0 params
func (o *QuotasGetv20Params) SetFilesetName(filesetName string) {
	o.FilesetName = filesetName
}

// WithFilesystemName adds the filesystemName to the quotas getv2 0 params
func (o *QuotasGetv20Params) WithFilesystemName(filesystemName string) *QuotasGetv20Params {
	o.SetFilesystemName(filesystemName)
	return o
}

// SetFilesystemName adds the filesystemName to the quotas getv2 0 params
func (o *QuotasGetv20Params) SetFilesystemName(filesystemName string) {
	o.FilesystemName = filesystemName
}

// WithFilter adds the filter to the quotas getv2 0 params
func (o *QuotasGetv20Params) WithFilter(filter *string) *QuotasGetv20Params {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the quotas getv2 0 params
func (o *QuotasGetv20Params) SetFilter(filter *string) {
	o.Filter = filter
}

// WriteToRequest writes these params to a swagger request
func (o *QuotasGetv20Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param filesetName
	if err := r.SetPathParam("filesetName", o.FilesetName); err != nil {
		return err
	}

	// path param filesystemName
	if err := r.SetPathParam("filesystemName", o.FilesystemName); err != nil {
		return err
	}

	if o.Filter != nil {

		// query param filter
		var qrFilter string
		if o.Filter != nil {
			qrFilter = *o.Filter
		}
		qFilter := qrFilter
		if qFilter != "" {
			if err := r.SetQueryParam("filter", qFilter); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

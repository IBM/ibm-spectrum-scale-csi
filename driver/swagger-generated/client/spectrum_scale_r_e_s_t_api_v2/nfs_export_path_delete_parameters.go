// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewNfsExportPathDeleteParams creates a new NfsExportPathDeleteParams object
// with the default values initialized.
func NewNfsExportPathDeleteParams() *NfsExportPathDeleteParams {
	var ()
	return &NfsExportPathDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewNfsExportPathDeleteParamsWithTimeout creates a new NfsExportPathDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewNfsExportPathDeleteParamsWithTimeout(timeout time.Duration) *NfsExportPathDeleteParams {
	var ()
	return &NfsExportPathDeleteParams{

		timeout: timeout,
	}
}

// NewNfsExportPathDeleteParamsWithContext creates a new NfsExportPathDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewNfsExportPathDeleteParamsWithContext(ctx context.Context) *NfsExportPathDeleteParams {
	var ()
	return &NfsExportPathDeleteParams{

		Context: ctx,
	}
}

// NewNfsExportPathDeleteParamsWithHTTPClient creates a new NfsExportPathDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewNfsExportPathDeleteParamsWithHTTPClient(client *http.Client) *NfsExportPathDeleteParams {
	var ()
	return &NfsExportPathDeleteParams{
		HTTPClient: client,
	}
}

/*NfsExportPathDeleteParams contains all the parameters to send to the API endpoint
for the nfs export path delete operation typically these are written to a http.Request
*/
type NfsExportPathDeleteParams struct {

	/*ExportPath
	  path of the export

	*/
	ExportPath string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the nfs export path delete params
func (o *NfsExportPathDeleteParams) WithTimeout(timeout time.Duration) *NfsExportPathDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the nfs export path delete params
func (o *NfsExportPathDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the nfs export path delete params
func (o *NfsExportPathDeleteParams) WithContext(ctx context.Context) *NfsExportPathDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the nfs export path delete params
func (o *NfsExportPathDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the nfs export path delete params
func (o *NfsExportPathDeleteParams) WithHTTPClient(client *http.Client) *NfsExportPathDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the nfs export path delete params
func (o *NfsExportPathDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExportPath adds the exportPath to the nfs export path delete params
func (o *NfsExportPathDeleteParams) WithExportPath(exportPath string) *NfsExportPathDeleteParams {
	o.SetExportPath(exportPath)
	return o
}

// SetExportPath adds the exportPath to the nfs export path delete params
func (o *NfsExportPathDeleteParams) SetExportPath(exportPath string) {
	o.ExportPath = exportPath
}

// WriteToRequest writes these params to a swagger request
func (o *NfsExportPathDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param exportPath
	if err := r.SetPathParam("exportPath", o.ExportPath); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

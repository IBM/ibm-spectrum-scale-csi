// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"example.com/m/v2/models"
)

// NewNfsExportPathPutParams creates a new NfsExportPathPutParams object
// with the default values initialized.
func NewNfsExportPathPutParams() *NfsExportPathPutParams {
	var ()
	return &NfsExportPathPutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewNfsExportPathPutParamsWithTimeout creates a new NfsExportPathPutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewNfsExportPathPutParamsWithTimeout(timeout time.Duration) *NfsExportPathPutParams {
	var ()
	return &NfsExportPathPutParams{

		timeout: timeout,
	}
}

// NewNfsExportPathPutParamsWithContext creates a new NfsExportPathPutParams object
// with the default values initialized, and the ability to set a context for a request
func NewNfsExportPathPutParamsWithContext(ctx context.Context) *NfsExportPathPutParams {
	var ()
	return &NfsExportPathPutParams{

		Context: ctx,
	}
}

// NewNfsExportPathPutParamsWithHTTPClient creates a new NfsExportPathPutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewNfsExportPathPutParamsWithHTTPClient(client *http.Client) *NfsExportPathPutParams {
	var ()
	return &NfsExportPathPutParams{
		HTTPClient: client,
	}
}

/*NfsExportPathPutParams contains all the parameters to send to the API endpoint
for the nfs export path put operation typically these are written to a http.Request
*/
type NfsExportPathPutParams struct {

	/*Body*/
	Body *models.NfsExportUpdate
	/*ExportPath
	  path of the export

	*/
	ExportPath string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the nfs export path put params
func (o *NfsExportPathPutParams) WithTimeout(timeout time.Duration) *NfsExportPathPutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the nfs export path put params
func (o *NfsExportPathPutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the nfs export path put params
func (o *NfsExportPathPutParams) WithContext(ctx context.Context) *NfsExportPathPutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the nfs export path put params
func (o *NfsExportPathPutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the nfs export path put params
func (o *NfsExportPathPutParams) WithHTTPClient(client *http.Client) *NfsExportPathPutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the nfs export path put params
func (o *NfsExportPathPutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the nfs export path put params
func (o *NfsExportPathPutParams) WithBody(body *models.NfsExportUpdate) *NfsExportPathPutParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the nfs export path put params
func (o *NfsExportPathPutParams) SetBody(body *models.NfsExportUpdate) {
	o.Body = body
}

// WithExportPath adds the exportPath to the nfs export path put params
func (o *NfsExportPathPutParams) WithExportPath(exportPath string) *NfsExportPathPutParams {
	o.SetExportPath(exportPath)
	return o
}

// SetExportPath adds the exportPath to the nfs export path put params
func (o *NfsExportPathPutParams) SetExportPath(exportPath string) {
	o.ExportPath = exportPath
}

// WriteToRequest writes these params to a swagger request
func (o *NfsExportPathPutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param exportPath
	if err := r.SetPathParam("exportPath", o.ExportPath); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

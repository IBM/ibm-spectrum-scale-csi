// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAuthenticationKeyPutv2Params creates a new AuthenticationKeyPutv2Params object
// with the default values initialized.
func NewAuthenticationKeyPutv2Params() *AuthenticationKeyPutv2Params {
	var ()
	return &AuthenticationKeyPutv2Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewAuthenticationKeyPutv2ParamsWithTimeout creates a new AuthenticationKeyPutv2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewAuthenticationKeyPutv2ParamsWithTimeout(timeout time.Duration) *AuthenticationKeyPutv2Params {
	var ()
	return &AuthenticationKeyPutv2Params{

		timeout: timeout,
	}
}

// NewAuthenticationKeyPutv2ParamsWithContext creates a new AuthenticationKeyPutv2Params object
// with the default values initialized, and the ability to set a context for a request
func NewAuthenticationKeyPutv2ParamsWithContext(ctx context.Context) *AuthenticationKeyPutv2Params {
	var ()
	return &AuthenticationKeyPutv2Params{

		Context: ctx,
	}
}

// NewAuthenticationKeyPutv2ParamsWithHTTPClient creates a new AuthenticationKeyPutv2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAuthenticationKeyPutv2ParamsWithHTTPClient(client *http.Client) *AuthenticationKeyPutv2Params {
	var ()
	return &AuthenticationKeyPutv2Params{
		HTTPClient: client,
	}
}

/*AuthenticationKeyPutv2Params contains all the parameters to send to the API endpoint
for the authentication key putv2 operation typically these are written to a http.Request
*/
type AuthenticationKeyPutv2Params struct {

	/*Action
	  The action to perform on the authentication key, either commit or propagate.

	*/
	Action string
	/*Nodes
	  Only allowed for the propagate action. Comma separated list of nodes or node classes that define the nodes on which to propagate.

	*/
	Nodes *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) WithTimeout(timeout time.Duration) *AuthenticationKeyPutv2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) WithContext(ctx context.Context) *AuthenticationKeyPutv2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) WithHTTPClient(client *http.Client) *AuthenticationKeyPutv2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) WithAction(action string) *AuthenticationKeyPutv2Params {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) SetAction(action string) {
	o.Action = action
}

// WithNodes adds the nodes to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) WithNodes(nodes *string) *AuthenticationKeyPutv2Params {
	o.SetNodes(nodes)
	return o
}

// SetNodes adds the nodes to the authentication key putv2 params
func (o *AuthenticationKeyPutv2Params) SetNodes(nodes *string) {
	o.Nodes = nodes
}

// WriteToRequest writes these params to a swagger request
func (o *AuthenticationKeyPutv2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param action
	qrAction := o.Action
	qAction := qrAction
	if qAction != "" {
		if err := r.SetQueryParam("action", qAction); err != nil {
			return err
		}
	}

	if o.Nodes != nil {

		// query param nodes
		var qrNodes string
		if o.Nodes != nil {
			qrNodes = *o.Nodes
		}
		qNodes := qrNodes
		if qNodes != "" {
			if err := r.SetQueryParam("nodes", qNodes); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

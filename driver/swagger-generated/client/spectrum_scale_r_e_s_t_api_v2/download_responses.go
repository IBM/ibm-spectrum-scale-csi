// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"example.com/m/v2/models"
)

// DownloadReader is a Reader for the Download structure.
type DownloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDownloadAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewDownloadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadAccepted creates a DownloadAccepted with default headers values
func NewDownloadAccepted() *DownloadAccepted {
	return &DownloadAccepted{}
}

/*DownloadAccepted handles this case with default header values.

successful operation
*/
type DownloadAccepted struct {
	Payload *models.AsyncRequestResponse
}

func (o *DownloadAccepted) Error() string {
	return fmt.Sprintf("[POST /scalemgmt/v2/filesystems/{filesystemName}/filesets/{filesetName}/cos/download][%d] downloadAccepted  %+v", 202, o.Payload)
}

func (o *DownloadAccepted) GetPayload() *models.AsyncRequestResponse {
	return o.Payload
}

func (o *DownloadAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AsyncRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadInternalServerError creates a DownloadInternalServerError with default headers values
func NewDownloadInternalServerError() *DownloadInternalServerError {
	return &DownloadInternalServerError{}
}

/*DownloadInternalServerError handles this case with default header values.

Internal Server Error
*/
type DownloadInternalServerError struct {
	Payload *models.RequestStatus
}

func (o *DownloadInternalServerError) Error() string {
	return fmt.Sprintf("[POST /scalemgmt/v2/filesystems/{filesystemName}/filesets/{filesetName}/cos/download][%d] downloadInternalServerError  %+v", 500, o.Payload)
}

func (o *DownloadInternalServerError) GetPayload() *models.RequestStatus {
	return o.Payload
}

func (o *DownloadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

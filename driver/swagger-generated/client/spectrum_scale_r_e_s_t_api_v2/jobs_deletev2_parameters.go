// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewJobsDeletev2Params creates a new JobsDeletev2Params object
// with the default values initialized.
func NewJobsDeletev2Params() *JobsDeletev2Params {
	var ()
	return &JobsDeletev2Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewJobsDeletev2ParamsWithTimeout creates a new JobsDeletev2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewJobsDeletev2ParamsWithTimeout(timeout time.Duration) *JobsDeletev2Params {
	var ()
	return &JobsDeletev2Params{

		timeout: timeout,
	}
}

// NewJobsDeletev2ParamsWithContext creates a new JobsDeletev2Params object
// with the default values initialized, and the ability to set a context for a request
func NewJobsDeletev2ParamsWithContext(ctx context.Context) *JobsDeletev2Params {
	var ()
	return &JobsDeletev2Params{

		Context: ctx,
	}
}

// NewJobsDeletev2ParamsWithHTTPClient creates a new JobsDeletev2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewJobsDeletev2ParamsWithHTTPClient(client *http.Client) *JobsDeletev2Params {
	var ()
	return &JobsDeletev2Params{
		HTTPClient: client,
	}
}

/*JobsDeletev2Params contains all the parameters to send to the API endpoint
for the jobs deletev2 operation typically these are written to a http.Request
*/
type JobsDeletev2Params struct {

	/*Force
	  if true force job cancellation (sends a kill -9 to process)

	*/
	Force *bool
	/*JobID*/
	JobID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the jobs deletev2 params
func (o *JobsDeletev2Params) WithTimeout(timeout time.Duration) *JobsDeletev2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the jobs deletev2 params
func (o *JobsDeletev2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the jobs deletev2 params
func (o *JobsDeletev2Params) WithContext(ctx context.Context) *JobsDeletev2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the jobs deletev2 params
func (o *JobsDeletev2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the jobs deletev2 params
func (o *JobsDeletev2Params) WithHTTPClient(client *http.Client) *JobsDeletev2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the jobs deletev2 params
func (o *JobsDeletev2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForce adds the force to the jobs deletev2 params
func (o *JobsDeletev2Params) WithForce(force *bool) *JobsDeletev2Params {
	o.SetForce(force)
	return o
}

// SetForce adds the force to the jobs deletev2 params
func (o *JobsDeletev2Params) SetForce(force *bool) {
	o.Force = force
}

// WithJobID adds the jobID to the jobs deletev2 params
func (o *JobsDeletev2Params) WithJobID(jobID int64) *JobsDeletev2Params {
	o.SetJobID(jobID)
	return o
}

// SetJobID adds the jobId to the jobs deletev2 params
func (o *JobsDeletev2Params) SetJobID(jobID int64) {
	o.JobID = jobID
}

// WriteToRequest writes these params to a swagger request
func (o *JobsDeletev2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Force != nil {

		// query param force
		var qrForce bool
		if o.Force != nil {
			qrForce = *o.Force
		}
		qForce := swag.FormatBool(qrForce)
		if qForce != "" {
			if err := r.SetQueryParam("force", qForce); err != nil {
				return err
			}
		}

	}

	// path param jobId
	if err := r.SetPathParam("jobId", swag.FormatInt64(o.JobID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

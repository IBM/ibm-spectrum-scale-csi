// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"example.com/m/v2/models"
)

// CallhomeGetReader is a Reader for the CallhomeGet structure.
type CallhomeGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CallhomeGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCallhomeGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCallhomeGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCallhomeGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCallhomeGetOK creates a CallhomeGetOK with default headers values
func NewCallhomeGetOK() *CallhomeGetOK {
	return &CallhomeGetOK{}
}

/*CallhomeGetOK handles this case with default header values.

successful operation
*/
type CallhomeGetOK struct {
	Payload *models.CallHomeInlineResponse200
}

func (o *CallhomeGetOK) Error() string {
	return fmt.Sprintf("[GET /scalemgmt/v2/callhome][%d] callhomeGetOK  %+v", 200, o.Payload)
}

func (o *CallhomeGetOK) GetPayload() *models.CallHomeInlineResponse200 {
	return o.Payload
}

func (o *CallhomeGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CallHomeInlineResponse200)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCallhomeGetBadRequest creates a CallhomeGetBadRequest with default headers values
func NewCallhomeGetBadRequest() *CallhomeGetBadRequest {
	return &CallhomeGetBadRequest{}
}

/*CallhomeGetBadRequest handles this case with default header values.

Invalid request
*/
type CallhomeGetBadRequest struct {
	Payload *models.Http400BadRequest
}

func (o *CallhomeGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /scalemgmt/v2/callhome][%d] callhomeGetBadRequest  %+v", 400, o.Payload)
}

func (o *CallhomeGetBadRequest) GetPayload() *models.Http400BadRequest {
	return o.Payload
}

func (o *CallhomeGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Http400BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCallhomeGetInternalServerError creates a CallhomeGetInternalServerError with default headers values
func NewCallhomeGetInternalServerError() *CallhomeGetInternalServerError {
	return &CallhomeGetInternalServerError{}
}

/*CallhomeGetInternalServerError handles this case with default header values.

Internal Server Error
*/
type CallhomeGetInternalServerError struct {
	Payload *models.Http500InternalServerError
}

func (o *CallhomeGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /scalemgmt/v2/callhome][%d] callhomeGetInternalServerError  %+v", 500, o.Payload)
}

func (o *CallhomeGetInternalServerError) GetPayload() *models.Http500InternalServerError {
	return o.Payload
}

func (o *CallhomeGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Http500InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package spectrum_scale_r_e_s_t_api_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"example.com/m/v2/models"
)

// RemoteAccessPostReader is a Reader for the RemoteAccessPost structure.
type RemoteAccessPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoteAccessPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoteAccessPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoteAccessPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoteAccessPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRemoteAccessPostOK creates a RemoteAccessPostOK with default headers values
func NewRemoteAccessPostOK() *RemoteAccessPostOK {
	return &RemoteAccessPostOK{}
}

/*RemoteAccessPostOK handles this case with default header values.

successful operation
*/
type RemoteAccessPostOK struct {
	Payload *models.AccessRequestResponse
}

func (o *RemoteAccessPostOK) Error() string {
	return fmt.Sprintf("[POST /scalemgmt/v2/access][%d] remoteAccessPostOK  %+v", 200, o.Payload)
}

func (o *RemoteAccessPostOK) GetPayload() *models.AccessRequestResponse {
	return o.Payload
}

func (o *RemoteAccessPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoteAccessPostBadRequest creates a RemoteAccessPostBadRequest with default headers values
func NewRemoteAccessPostBadRequest() *RemoteAccessPostBadRequest {
	return &RemoteAccessPostBadRequest{}
}

/*RemoteAccessPostBadRequest handles this case with default header values.

Invalid request
*/
type RemoteAccessPostBadRequest struct {
	Payload *models.Http400BadRequest
}

func (o *RemoteAccessPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /scalemgmt/v2/access][%d] remoteAccessPostBadRequest  %+v", 400, o.Payload)
}

func (o *RemoteAccessPostBadRequest) GetPayload() *models.Http400BadRequest {
	return o.Payload
}

func (o *RemoteAccessPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Http400BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoteAccessPostInternalServerError creates a RemoteAccessPostInternalServerError with default headers values
func NewRemoteAccessPostInternalServerError() *RemoteAccessPostInternalServerError {
	return &RemoteAccessPostInternalServerError{}
}

/*RemoteAccessPostInternalServerError handles this case with default header values.

Internal Server Error
*/
type RemoteAccessPostInternalServerError struct {
	Payload *models.Http500InternalServerError
}

func (o *RemoteAccessPostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /scalemgmt/v2/access][%d] remoteAccessPostInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoteAccessPostInternalServerError) GetPayload() *models.Http500InternalServerError {
	return o.Payload
}

func (o *RemoteAccessPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Http500InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

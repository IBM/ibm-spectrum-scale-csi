// Code generated by go-swagger; DO NOT EDIT.

package api_discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDocsParams creates a new GetDocsParams object
// with the default values initialized.
func NewGetDocsParams() *GetDocsParams {
	var (
		compactDefault = bool(false)
	)
	return &GetDocsParams{
		Compact: &compactDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDocsParamsWithTimeout creates a new GetDocsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDocsParamsWithTimeout(timeout time.Duration) *GetDocsParams {
	var (
		compactDefault = bool(false)
	)
	return &GetDocsParams{
		Compact: &compactDefault,

		timeout: timeout,
	}
}

// NewGetDocsParamsWithContext creates a new GetDocsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDocsParamsWithContext(ctx context.Context) *GetDocsParams {
	var (
		compactDefault = bool(false)
	)
	return &GetDocsParams{
		Compact: &compactDefault,

		Context: ctx,
	}
}

// NewGetDocsParamsWithHTTPClient creates a new GetDocsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDocsParamsWithHTTPClient(client *http.Client) *GetDocsParams {
	var (
		compactDefault = bool(false)
	)
	return &GetDocsParams{
		Compact:    &compactDefault,
		HTTPClient: client,
	}
}

/*GetDocsParams contains all the parameters to send to the API endpoint
for the get docs operation typically these are written to a http.Request
*/
type GetDocsParams struct {

	/*Accept
	  Format of the returned document

	*/
	Accept *string
	/*Compact
	  Indicates if the output will contain any indenting white spaces, new line feeds, etc. By default, the output will not be compacted

	*/
	Compact *bool
	/*Root
	  Filter the found context roots

	*/
	Root []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get docs params
func (o *GetDocsParams) WithTimeout(timeout time.Duration) *GetDocsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get docs params
func (o *GetDocsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get docs params
func (o *GetDocsParams) WithContext(ctx context.Context) *GetDocsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get docs params
func (o *GetDocsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get docs params
func (o *GetDocsParams) WithHTTPClient(client *http.Client) *GetDocsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get docs params
func (o *GetDocsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccept adds the accept to the get docs params
func (o *GetDocsParams) WithAccept(accept *string) *GetDocsParams {
	o.SetAccept(accept)
	return o
}

// SetAccept adds the accept to the get docs params
func (o *GetDocsParams) SetAccept(accept *string) {
	o.Accept = accept
}

// WithCompact adds the compact to the get docs params
func (o *GetDocsParams) WithCompact(compact *bool) *GetDocsParams {
	o.SetCompact(compact)
	return o
}

// SetCompact adds the compact to the get docs params
func (o *GetDocsParams) SetCompact(compact *bool) {
	o.Compact = compact
}

// WithRoot adds the root to the get docs params
func (o *GetDocsParams) WithRoot(root []string) *GetDocsParams {
	o.SetRoot(root)
	return o
}

// SetRoot adds the root to the get docs params
func (o *GetDocsParams) SetRoot(root []string) {
	o.Root = root
}

// WriteToRequest writes these params to a swagger request
func (o *GetDocsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Accept != nil {

		// header param accept
		if err := r.SetHeaderParam("accept", *o.Accept); err != nil {
			return err
		}

	}

	if o.Compact != nil {

		// query param compact
		var qrCompact bool
		if o.Compact != nil {
			qrCompact = *o.Compact
		}
		qCompact := swag.FormatBool(qrCompact)
		if qCompact != "" {
			if err := r.SetQueryParam("compact", qCompact); err != nil {
				return err
			}
		}

	}

	valuesRoot := o.Root

	joinedRoot := swag.JoinByFormat(valuesRoot, "multi")
	// query array param root
	if err := r.SetQueryParam("root", joinedRoot...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

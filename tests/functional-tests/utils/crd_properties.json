{
"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation\nof an object. Servers should convert recognized schemas to the latest\ninternal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
						"type": "string"
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this\nobject represents. Servers may infer this from the endpoint the client\nsubmits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"type": "object"
					},
					"spec": {
						"properties": {
							"attacher": {
								"description": "Attacher image for csi (actually attaches to the storage).",
								"type": "string"
							},
							"attacherNodeSelector": {
								"description": "Node selector for attacher sidecar.",
								"items": {
									"properties": {
										"key": {
											"description": "Key for node selector.",
											"type": "string"
										},
										"value": {
											"description": "Value for key.",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"clusters": {
								"description": "A collection of gpfs cluster properties for the csi driver\nto mount.",
								"items": {
									"properties": {
										"cacert": {
											"description": "A string specifying a cacert resource name.",
											"type": "string"
										},
										"id": {
											"description": "The cluster id of the gpfs cluster specified (mandatory).",
											"type": "string"
										},
										"primary": {
											"description": "The primary file system for the GPFS cluster.",
											"properties": {
												"inodeLimit": {
													"description": "Inode limit for Primary Fileset.",
													"type": "string"
												},
												"primaryFs": {
													"description": "The name of the primary filesystem.",
													"type": "string"
												},
												"primaryFset": {
													"description": "The name of the primary fileset, created in primaryFs.",
													"type": "string"
												},
												"remoteCluster": {
													"description": "Remote cluster ID.",
													"type": "string"
												},
												"remoteFs": {
													"description": "Filesystem name on remote cluster.",
													"type": "string"
												}
											},
											"type": "object"
										},
										"restApi": {
											"description": "A collection of targets for REST calls.",
											"items": {
												"properties": {
													"guiHost": {
														"description": "The hostname of the REST server.",
														"type": "string"
													},
													"guiPort": {
														"description": "The port number running the REST server.",
														"type": "integer"
													}
												},
												"type": "object"
											},
											"type": "array"
										},
										"secrets": {
											"description": "A string specifying a secret resource name.",
											"type": "string"
										},
										"secureSslMode": {
											"description": "Require a secure SSL connection to connect to GPFS.",
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"required": [
									"id"
								],
								"type": "array"
							},
							"driverRegistrar": {
								"description": "Sidecar container image for the csi spectrum scale plugin\npods.",
								"type": "string"
							},
							"nodeMapping": {
								"description": "Mapping of K8s node with SpectrumScale node.",
								"items": {
									"properties": {
										"k8sNode": {
											"description": "K8s node name.",
											"type": "string"
										},
										"spectrumscaleNode": {
											"description": "SpectrumScale node name.",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"pluginNodeSelector": {
								"description": "Node selector for SpectrumScale CSI Plugin.",
								"items": {
									"properties": {
										"key": {
											"description": "Key for node selector.",
											"type": "string"
										},
										"value": {
											"description": "Value for key.",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"provisioner": {
								"description": "Provisioner image for csi (actually issues provision requests).",
								"type": "string"
							},
							"provisionerNodeSelector": {
								"description": "Node selector for provisioner sidecar.",
								"items": {
									"properties": {
										"key": {
											"description": "Key for node selector.",
											"type": "string"
										},
										"value": {
											"description": "Value for key.",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"scaleHostpath": {
								"description": "The path to the gpfs file system mounted on the host machine.",
								"type": "string"
							},
							"secretCounter": {
								"description": "An internal counter used by the operator to trigger reloads\non secret change.",
								"type": "integer"
							},
                                                        "trigger": {
                                                                "description": "A generic trigger to be used in kickin off the ansible operator.",
                                                                "type": "string"
                                                        },
							"spectrumScale": {
								"description": "Image name for the csi spectrum scale plugin container.",
								"type": "string"
							}
						},
						"required": [
							"scaleHostpath"
						],
						"type": "object"
					},
					"status": {
						"properties": {
							"conditions": {
								"description": "The active status of the operator",
								"items": {
									"properties": {
										"isRunning": {
											"description": "Indicates that the plugin is running.",
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
			}

